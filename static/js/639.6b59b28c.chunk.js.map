{"version":3,"file":"static/js/639.6b59b28c.chunk.js","mappings":"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","sources":["styles/selectStyle.tsx","utils/get-default-item.tsx","components/Header/Language.tsx","components/Header/HeaderView.tsx","components/Header/HeaderController.tsx"],"sourcesContent":["export const selectStyle = {\r\n  option: (provided: any, state: any) => ({\r\n    ...provided,\r\n    borderBottom: '1px solid rgba(0, 127, 255,0.1)',\r\n    color: state.isSelected ? '#fff' : '#000',\r\n    padding: 10,\r\n    textAlign:'center',\r\n    borderRadius: '5px'\r\n  }),\r\n  container: (provided: any, state: any) => ({\r\n    ...provided,\r\n    width: '100%',\r\n  }),\r\n  control: (provided: any, state: any) => ({\r\n    ...provided,\r\n    width: '100%',\r\n  }),\r\n  input: (provided: any, state: any) => ({\r\n    ...provided,\r\n    width: '100%',\r\n    color: 'black',\r\n  }),\r\n  placeholder: (provided: any, state: any) => ({\r\n    ...provided,\r\n    color: 'black',\r\n  }),\r\n};\r\n","export const getDefaultItem = (id: any, arr: any, key: any) => {\r\n  if (arr) {\r\n    let entry = arr.find((e: any) => e.id === id || e.label === id);\r\n    if (entry) {\r\n      return key ? entry[key] : entry;\r\n    }\r\n  }\r\n  return '';\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from 'reactstrap';\r\nimport { getLanguage, local, toogleLanguage } from '../../lang/local';\r\n\r\nexport const Language = () => {\r\n  const [lang, setLang] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    if (!lang) {\r\n      if (getLanguage() === 'ar') {\r\n        setLang('arabic');\r\n      } else {\r\n        setLang('english');\r\n      }\r\n    }\r\n  }, []);\r\n  const handleLang = (key: string) => {\r\n    toogleLanguage(key);\r\n    if (key === 'en') {\r\n      setLang('english');\r\n    } else {\r\n      setLang('arabic');\r\n    }\r\n  };\r\n  return (\r\n    <UncontrolledDropdown direction='down' className='dropdown_header'>\r\n      <DropdownToggle  caret className='button-toggle' color='light'>\r\n        {local[lang]}\r\n      </DropdownToggle>\r\n      <DropdownMenu end>\r\n        <DropdownItem\r\n          className='text-center'\r\n          active={getLanguage() === 'en' ? true : false}\r\n          onClick={() =>getLanguage() === 'ar'  ?handleLang('en'):null}\r\n        >\r\n          {local.english}\r\n        </DropdownItem>\r\n        <DropdownItem\r\n          className='text-center mt-3'\r\n          active={getLanguage() === 'ar' ? true : false}\r\n          onClick={() =>getLanguage() === 'en'  ?handleLang('ar'):null}\r\n        >\r\n          {local.arabic}\r\n        </DropdownItem>\r\n      </DropdownMenu>\r\n    </UncontrolledDropdown>\r\n  );\r\n};\r\n","import './Header.scss';\r\nimport AsyncSelect from 'react-select/async';\r\nimport { selectStyle } from '../../styles/selectStyle';\r\nimport { local } from '../../lang/local';\r\nimport { CgMenuRight } from 'react-icons/cg';\r\nimport { getDefaultItem } from '../../utils/get-default-item';\r\nimport { Language } from './Language';\r\nexport const HeaderView = ({\r\n  homeState,\r\n  handleChange,\r\n  promiseOptions,\r\n  handleToggleSidebar,\r\n}: any) => {\r\n  return (\r\n    <section className='home-section'>\r\n      <div className='home-header'>\r\n        <div\r\n          className='container flex'\r\n          style={{ justifyContent: 'space-between' }}\r\n        >\r\n          <div className='flex alignItem'>\r\n            <Language />\r\n          </div>\r\n          <div className='search-wrapper flex alignItem'>\r\n            <AsyncSelect\r\n              isSearchable\r\n              defaultOptions={homeState.states}\r\n              cacheOptions\r\n              loadOptions={promiseOptions}\r\n              styles={selectStyle}\r\n              onChange={handleChange}\r\n              value={getDefaultItem(\r\n                homeState.selectedState.name,\r\n                homeState.states,\r\n                null\r\n              )}\r\n              key={homeState.selectedState}\r\n              placeholder='Search'\r\n            />\r\n            <CgMenuRight className='icon' onClick={handleToggleSidebar} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import { HeaderView } from './HeaderView';\r\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\r\nimport { homeSlice } from '../../redux/store';\r\nimport { fetchStateImage } from '../../modules/Home/homeService';\r\nconst HeaderController = ({handleToggleSidebar}:any) => {\r\n  const homeState = useAppSelector(homeSlice.state);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const filterItems = (inputValue: any) => {\r\n    return homeState.states.filter((i:any) =>\r\n      i.label.toLowerCase().includes(inputValue.toLowerCase())\r\n    );\r\n  };\r\n\r\n  const promiseOptions = (inputValue: any) =>\r\n    new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve(filterItems(inputValue));\r\n      }, 10);\r\n    });\r\n\r\n  const handleChange = (e: any) => {\r\n    if (e) {\r\n      if (e.weather === false) {\r\n        //error\r\n      } else {\r\n        if (Object.values(e.weather).length === 0) {\r\n          let index = homeState.states.indexOf(e);\r\n          fetchStateImage(\r\n            dispatch,\r\n            homeSlice.actions.updateStatesProp,\r\n            e,\r\n            e.name.split(' G')[0],\r\n            homeState.country.country_code2,\r\n            index\r\n          );\r\n        }\r\n        dispatch(homeSlice.actions.updateSelectedStateProp(e));\r\n      }\r\n    } else {\r\n      dispatch(homeSlice.actions.updateSelectedStateProp({}));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <HeaderView\r\n      promiseOptions={promiseOptions}\r\n      homeState={homeState}\r\n      handleChange={handleChange}\r\n      handleToggleSidebar={handleToggleSidebar}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HeaderController;\r\n"],"names":["selectStyle","option","provided","state","borderBottom","color","isSelected","padding","textAlign","borderRadius","container","width","control","input","placeholder","getDefaultItem","id","arr","key","entry","find","e","label","Language","useState","lang","setLang","useEffect","getLanguage","handleLang","toogleLanguage","direction","className","caret","local","end","active","onClick","HeaderView","homeState","handleChange","promiseOptions","handleToggleSidebar","style","justifyContent","isSearchable","defaultOptions","states","cacheOptions","loadOptions","styles","onChange","value","selectedState","name","useAppSelector","homeSlice","dispatch","useAppDispatch","inputValue","Promise","resolve","setTimeout","filter","i","toLowerCase","includes","filterItems","weather","Object","values","length","index","indexOf","fetchStateImage","split","country","country_code2"],"sourceRoot":""}